openapi: '3.1.0'
info:
  title: Lemmy client API
  description: This is an unofficial OpenAPI spec for Lemmy client API.
  contact:
    url: https://github.com/shadone/Lemmy-OpenAPI-Spec
    email: denis@ddenis.info
  license:
    name: BSD 2-Clause
    identifier: BSD-2-Clause
  version: '0.19.1+1'

servers:
  - url: https://discuss.tchncs.de/api/v3
  - url: https://lemmy-0-19-1.ddenis.info/api/v3

tags:
  - name: Account
    description: Account management.
  - name: User
    description: Operations on users.
  - name: Post
    description: Operations on posts.
  - name: Comments
    description: Operations on comments.

paths:
  /user:
    get:
      tags:
        - User
      summary: Get Person Details
      description: Fetch a person by their id.
      operationId: getPersonDetails
      parameters:
        - in: query
          name: GetPersonDetails
          schema:
            $ref: '#/components/schemas/GetPersonDetailsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonDetailsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /user/mentions:
    get:
      tags:
        - User
      summary: Get Person Mentions
      operationId: getPersonMentions
      parameters:
        - in: query
          name: GetPersonMentions
          schema:
            $ref: '#/components/schemas/GetPersonMentionsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMentionsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /user/login:
    post:
      tags:
        - Account
        - User
      summary: Login
      description: Login with a user account.
      operationId: login
      requestBody:
        description: User credential
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /post:
    get:
      tags:
        - Post
      summary: Get Post
      description: Fetch a post by its id.
      operationId: getPost
      parameters:
        - in: query
          name: GetPost
          schema:
            $ref: '#/components/schemas/GetPostRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /post/list:
    get:
      tags:
        - Post
      summary: Get Posts
      description: Fetch a collection of posts.
      operationId: getPosts
      parameters:
        - in: query
          name: GetPosts
          schema:
            $ref: '#/components/schemas/GetPostsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /comment/list:
    get:
      tags:
        - Comments
      summary: Get Comments
      operationId: getComments
      parameters:
        - in: query
          name: GetComments
          schema:
            $ref: '#/components/schemas/GetCommentsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /site:
    get:
      tags:
        - Site
      summary: Get Site
      operationId: getSite
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /resolve_object:
    get:
      summary: Resolve Object
      operationId: resolveObject
      parameters:
        - in: query
          name: q
          schema:
            type: string
            description: Search query.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveObjectResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

components:
  responses:
    ErrorResponse:
      description: An error has occurred.
      content: 
        application/json:
          schema: 
            type: array
            items:
              $ref: '#/components/schemas/ErrorResponse'

  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string

    PostID:
      type: integer
      format: int32
      summary: Post identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs
    
    CommentID:
      type: integer
      format: int32
      summary: Comment identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    PersonID:
      type: integer
      format: int32
      summary: Person identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    CommunityID:
      type: integer
      format: int32
      summary: Community identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    LanguageID:
      type: integer
      format: int32
      summary: Language identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    InstanceID:
      type: integer
      format: int32
      summary: Instance identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    PersonMentionID:
      type: integer
      format: int32
      summary: Person Mention identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    SiteID:
      type: integer
      format: int32
      summary: Site identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    LocalSiteID:
      type: integer
      format: int32
      summary: Local Site identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    LocalUserID:
      type: integer
      format: int32
      summary: Local User identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    CustomEmojiID:
      type: integer
      format: int32
      summary: Custom Emoji identifier
      description: The identifier is local to this instance.
      example: 1234
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/newtypes.rs

    LoginRequest:
      type: object
      required:
        - username_or_email
        - password
      properties:
        username_or_email:
          type: string
          example: 'foobar@example.org'
        password:
          type: string
          format: password
          example: 'mys3cur3p4$$w0rd'
        totp_2fa_token:
          type: string
    
    LoginResponse:
      type: object
      required:
        - registration_created
        - verify_email_sent
      properties:
        jwt:
          type: string
        registration_created:
          type: boolean
        verify_email_sent:
          type: boolean

    GetPostRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PostID'
          description: The post identifier to fetch.
        comment_id:
          $ref: '#/components/schemas/CommentID'
          description: The comment identifier to fetch.
    
    GetPostResponse:
      type: object
      required:
        - post_view
        - community_view
        - moderators
        - cross_posts
      properties:
        post_view:
          $ref: '#/components/schemas/PostView'
        community_view:
          $ref: '#/components/schemas/CommunityView'
        moderators:
          type: array
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
        cross_posts:
          type: array
          items:
            $ref: '#/components/schemas/PostView'

    PostView:
      type: object
      required:
        - post
        - creator
        - community
        - creator_banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - counts
        - subscribed
        - saved
        - read
        - creator_blocked
        - unread_comments
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs
      properties:
        post:
          description: The post content.
          $ref: '#/components/schemas/Post'
        creator:
          description: Author of the post.
          $ref: '#/components/schemas/Person'
        community:
          description: Community to which the post was submitted.
          $ref: '#/components/schemas/Community'
        creator_banned_from_community:
          type: boolean
          description: Specifies whether the post author is banned from the community.
        creator_is_moderator:
          type: boolean
        creator_is_admin:
          type: boolean
        counts:
          description: Stats about the post.
          $ref: '#/components/schemas/PostAggregates'
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
        saved:
          type: boolean
          description: Specifies whether the user marked the post as saved.
        read:
          type: boolean
          description: Specifies whether the user read the post.
        creator_blocked:
          type: boolean
          description: Specifies whether the user blocked the post author.
        my_vote:
          type: integer
          format: int32 # int16
          minimum: -32768
          maximum: 32767
          description: Users' vote status.
        unread_comments:
          type: integer
          format: int64
          description: The number of unread comments in the post for the user.

    Post:
      type: object
      required:
        - id
        - name
        - creator_id
        - community_id
        - removed
        - locked
        - published
        - deleted
        - nsfw
        - ap_id
        - local
        - language_id
        - featured_community
        - featured_local
      properties:
        id:
          description: Post identifier
          $ref: '#/components/schemas/PostID'
        name:
          type: string
          description: The title of the post, in markdown.
        url:
          type: string
          format: uri
          description: An optional link / url for the post.
        body:
          type: string
          description: An optional post body, in markdown.
        creator_id:
          $ref: '#/components/schemas/PersonID'
          description: Post author identifier. The identifier is local to this instance.
        community_id:
          $ref: '#/components/schemas/CommunityID'
          description: Community identifier. The identifier is local to this instance.
        removed:
          type: boolean
          description: Whether the post is removed.
        locked:
          type: boolean
          description: Whether the post is locked.
        published:
          type: string
          format: date-time
          description: The date this post was published.
        updated:
          type: string
          format: date-time
          description: The date this post was last updated.
        deleted:
          type: boolean
          description: Whether the post is deleted.
        nsfw:
          type: boolean
          description: Whether the post is NSFW.
        embed_title:
          type: string
          description: A title for the link.
        embed_description:
          type: string
          description: A description for the link.
        thumbnail_url:
          type: string
          format: uri
          description: A thumbnail picture url.
        ap_id:
          type: string
          format: uri
          description: The federated activity id / ap_id.
          example: https://sh.itjust.works/post/109799
        local:
          type: boolean
          description: Whether the post is local.
        embed_video_url:
          type: string
          format: uri
          description: A video url for the link.
        language_id:
          $ref: '#/components/schemas/LanguageID'
          description: The language of the post.
        featured_community:
          type: boolean
          description: Whether the post is featured to its community.
        featured_local:
          type: boolean
          description: Whether the post is featured to its site.

    Community:
      type: object
      required:
        - id
        - name
        - title
        - removed
        - published
        - deleted
        - nsfw
        - actor_id
        - local
        - hidden
        - posting_restricted_to_mods
        - instance_id
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/community.rs
      properties:
        id:
          description: Community identifier
          $ref: '#/components/schemas/CommunityID'
        name:
          type: string
          description: The unique name of the community.
          example: mylittlepony
        title:
          type: string
          description: A longer title, that can contain other characters, and doesn't have to be unique.
          example: 'MLP: Friendship is Magic Reddit Community'
        description:
          type: string
          description: A sidebar / markdown description.
        removed:
          type: boolean
          description: Whether the community is removed by a mod.
        published:
          type: string
          format: date-time
          description: The date community was created.
        updated:
          type: string
          format: date-time
          description: The date community info was last updated.
        deleted:
          type: boolean
          description: Whether the community has been deleted by its creator.
        nsfw:
          type: boolean
          description: Whether it is an NSFW community.
        actor_id:
          type: string
          format: uri
          description: The federated actor_id.
          example: https://lemmit.online/c/mylittlepony
        local:
          type: boolean
          description: Whether the community is local.
        icon:
          type: string
          format: uri
          description: A URL for an icon.
        banner:
          type: string
          format: uri
          description: A URL for a banner.
        hidden:
          type: boolean
          description: Whether the community is hidden.
        posting_restricted_to_mods:
          type: boolean
          description: Whether posting is restricted to mods only.
        instance_id:
          $ref: '#/components/schemas/InstanceID'
          
    Person:
      type: object
      required:
        - id
        - name
        - banned
        - published
        - actor_id
        - local
        - deleted
        - bot_account
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/person.rs
      properties:
        id:
          description: Person identifier
          $ref: '#/components/schemas/PersonID'
        name:
          type: string
          description: Username (aka nickname aka short users' name).
          example: helloworld
        display_name:
          type: string
          description: A display name for the user.
          example: Hello World!
        avatar:
          type: string
          format: uri
          description: A URL for an avatar.
        banned:
          type: boolean
          description: Whether the person is banned.
        published:
          type: string
          format: date-time
          description: The account creation date.
        updated:
          type: string
          format: date-time
        actor_id:
          type: string
          format: uri
          description: The federated actor_id.
          example: https://discuss.tchncs.de/u/milan
        bio:
          type: string
          description: An optional bio, in markdown.
        local:
          type: boolean
          description: Whether the person is local to our site.
        banner:
          type: string
          format: uri
          description: A URL for a banner.
        deleted:
          type: boolean
          description: Whether the person is deleted.
        matrix_user_id:
          type: string
          description: A matrix id, usually given an @person:matrix.org
        bot_account:
          type: boolean
          description: Whether the person is a bot account.
        ban_expires:
          type: string
          format: date-time
          description: When their ban, if it exists, expires, if at all.
        instance_id:
          description: Which instance the person belongs to.
          $ref: '#/components/schemas/InstanceID'

    PostAggregates:
      type: object
      required:
        - post_id
        - comments
        - score
        - upvotes
        - downvotes
        - published
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/aggregates/structs.rs
      properties:
        post_id:
          $ref: '#/components/schemas/PostID'
        comments:
          type: integer
          format: int64
          description: Number of comments in the post.
        score:
          type: integer
          format: int64
          description: Overall score of the post.
        upvotes:
          type: integer
          format: int64
          description: Number of upvotes.
        downvotes:
          type: integer
          format: int64
          description: Number of downvotes.
        published:
          type: string
          format: date-time
          description: The timestamp when the post was published.

    SubscribedType:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      description: A type / status for a community subscribe.
      enum:
        - Subscribed
        - NotSubscribed
        - Pending

    RegistrationMode:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      enum:
        - Closed
        - RequireApplication
        - Open

    Language:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/language.rs
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/LanguageID'
        code:
          type: string
          description: <
            Language code.

            Two letter ISO639-1 language code.

            Or an additional value `und` for Undefined language.
          example: sv
        name:
          type: string
          description: Language name.
          example: Svenska

    CommunityView:
      type: object
      required:
        - community
        - subscribed
        - blocked
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      properties:
        community:
          $ref: '#/components/schemas/Community'
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
        blocked:
          type: boolean
        counts:
          $ref: '#/components/schemas/CommunityAggregates'

    CommunityAggregates:
      type: object
      required:
        - community_id
        - subscribers
        - posts
        - comments
        - published
        - users_active_day
        - users_active_week
        - users_active_month
        - users_active_half_year
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/aggregates/structs.rs
      description: Aggregate data for a community.
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityID'
        subscribers:
          type: integer
          format: int64
        posts:
          type: integer
          format: int64
        comments:
          type: integer
          format: int64
        published:
          type: string
          format: date-time
        users_active_day:
          type: integer
          format: int64
          description: The number of users with any activity in the last day.
        users_active_week:
          type: integer
          format: int64
          description: The number of users with any activity in the last week.
        users_active_month:
          type: integer
          format: int64
          description: The number of users with any activity in the last month.
        users_active_half_year:
          type: integer
          format: int64
          description: The number of users with any activity in the last 6 months.

    CommunityModeratorView:
      type: object
      required:
        - community
        - moderator
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      description: A community moderator.
      properties:
        community:
          $ref: '#/components/schemas/Community'
        moderator:
          $ref: '#/components/schemas/Person'

    PaginationCursor:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs

    ListingType:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      enum:
        # Content from your own site, as well as all connected / federated sites.
        - All
        # Content from your site only.
        - Local
        # Content only from communities you've subscribed to.
        - Subscribed
        # Content that you can moderate (because you are a moderator of the community it is posted to).
        - ModeratorView

    SortType:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      enum:
        - Active
        - Hot
        - New
        - Old
        - TopSixHour
        - TopTwelveHour
        - TopDay
        - TopWeek
        - TopMonth
        - TopYear
        - TopAll
        - MostComments
        - NewComments
        - TopThreeMonths
        - TopSixMonths
        - TopNineMonths
        - Controversial
        - Scaled

    CommentSortType:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      enum:
        - Hot
        - Top
        - New
        - Old
        - Controversial

    PostListingMode:
      type: string
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/lib.rs
      enum:
        # A compact, list-type view.
        - List
        # A larger card-type view.
        - Card
        # A smaller card-type view, usually with images as thumbnails
        - SmallCard

    GetPostsRequest:
      type: object
      properties:
        type_:
          description: The type of listing to fetch.
          $ref: '#/components/schemas/ListingType'
        sort:
          description: Specifies how the posts in response should be ordered.
          $ref: '#/components/schemas/SortType'
        page:
          type: integer
          format: int64
          summary: Page number
          description: >
            Pagination. The page number to fetch the results. This allows to fetch large data sets one page at a time.
            The first page is number 1.
        limit:
          type: integer
          format: int64
          summary: Desired number of results per page
          description: >
            Pagination. Specifies the maximum number of results per page.
            Note: This is server specific but in regular Lemmy install the default value is 10 and max is 50.
        community_id:
          description: The community identifier to fetch posts from.
          $ref: '#/components/schemas/CommunityID'
        community_name:
          type: string
          description: The community name to fetch posts from.
        saved_only:
          type: boolean
          description: Whether to fetch only saved posts.
        liked_only:
          type: boolean
        disliked_only:
          type: boolean
        page_cursor: 
          $ref: '#/components/schemas/PaginationCursor'

    GetPostsResponse:
      type: object
      required:
        - posts
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/PostView'
        next_page:
          $ref: '#/components/schemas/PaginationCursor'

    GetCommentsRequest:
      type: object
      properties:
        type_:
          description: >
            Specify the type of listing to fetch all comments in a given listing.
            E.g. fetch all comments for Subscribed communities.
          $ref: '#/components/schemas/ListingType'
        sort:
          description: Specifies how the comments in response should be ordered.
          $ref: '#/components/schemas/SortType'
        max_depth:
          type: integer
          format: int32
        page:
          type: integer
          format: int64
          summary: Page number
          description: >
            Pagination. The page number to fetch the results. This allows to fetch large data sets one page at a time.
            The first page is number 1.
        limit:
          type: integer
          format: int64
          summary: Desired number of results per page
          description: >
            Pagination. Specifies the maximum number of results per page.
            Note: This is server specific but in regular Lemmy install the default value is 10 and max is 50.
        community_id:
          description: The community identifier to fetch comments from.
          $ref: '#/components/schemas/CommunityID'
        community_name:
          type: string
          description: The community name to fetch comments from.
        post_id:
          description: The post identifier to fetch comments from.
          $ref: '#/components/schemas/PostID'
        parent_id:
          $ref: '#/components/schemas/CommentID'
        saved_only:
          type: boolean
          description: Whether to fetch only saved comments.
        liked_only:
          type: boolean
        disliked_only:
          type: boolean

    GetCommentsResponse:
      type: object
      required:
        - comments
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentView'

    CommentView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs
      required:
        - comment
        - creator
        - post
        - community
        - counts
        - creator_banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - creator_blocked
      properties:
        comment:
          description: The comment content.
          $ref: '#/components/schemas/Comment'
        creator:
          description: Author of the comment.
          $ref: '#/components/schemas/Person'
        post:
          description: The post this comment belongs to.
          $ref: '#/components/schemas/Post'
        community:
          description: Community to which the comment was submitted.
          $ref: '#/components/schemas/Community'
        counts:
          description: Stats about the comment.
          $ref: '#/components/schemas/CommentAggregates'
        creator_banned_from_community:
          type: boolean
          description: Specifies whether the comment author is banned from the community.
        creator_is_moderator:
          type: boolean
        creator_is_admin:
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
        saved:
          type: boolean
          description: Specifies whether the user marked the comment as saved.
        creator_blocked:
          type: boolean
          description: Specifies whether the user blocked the comment author.
        my_vote:
          type: integer
          format: int32 # int16
          minimum: -32768
          maximum: 32767
          description: Users' vote status.

    Comment:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/comment.rs
      required:
        - id
        - creator_id
        - post_id
        - content
        - removed
        - published
        - deleted
        - ap_id
        - local
        - path
        - distinguished
        - language_id
      properties:
        id:
          description: Comment identifier. The identifier is local to this instance.
          $ref: '#/components/schemas/CommentID'
        creator_id:
          description: Comment author identifier.
          $ref: '#/components/schemas/PersonID'
        post_id:
          description: Post identifier that the comment belongs to.
          $ref: '#/components/schemas/PostID'
        content:
          type: string
          description: The content of the comment, in markdown.
        removed:
          type: boolean
          description: Whether the comment is removed.
        published:
          type: string
          format: date-time
          description: The date this comment was published.
        updated:
          type: string
          format: date-time
          description: The date this comment was last updated.
        deleted:
          type: boolean
          description: Whether the comment is deleted.
        ap_id:
          type: string
          format: uri
          description: The federated activity id / ap_id.
          example: https://lemmy.world/comment/316303
        local:
          type: boolean
          description: Whether the comment is local.
        path:
          type: string
          description: <
            Specifies the path to this comment in a tree of comments.
            Represented as dot separated list of comment identifiers. The path starts with "0" representing the root.
          example: '0.219355.219732.225923'
        distinguished:
          type: boolean
        language_id:
          description: The language of the post.
          $ref: '#/components/schemas/LanguageID'

    CommentAggregates:
      type: object
      required:
        - comment_id
        - score
        - upvotes
        - downvotes
        - published
        - child_count
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/aggregates/structs.rs
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentID'
        score:
          type: integer
          format: int64
          description: Overall score of the comment.
        upvotes:
          type: integer
          format: int64
          description: Number of upvotes.
        downvotes:
          type: integer
          format: int64
          description: Number of downvotes.
        published:
          type: string
          format: date-time
          description: The timestamp when the comment was published.
        child_count:
          type: integer
          format: int32
          description: The total number of children in this comment branch.

    GetPersonDetailsRequest:
      type: object
      properties:
        person_id:
          $ref: '#/components/schemas/PersonID'
        username:
          type: string
        sort:
          $ref: '#/components/schemas/SortType'
        page:
          type: integer
          format: int64
          summary: Page number
          description: >
            Pagination. The page number to fetch the results. This allows to fetch large data sets one page at a time.
            The first page is number 1.
        limit:
          type: integer
          format: int64
          summary: Desired number of results per page
          description: >
            Pagination. Specifies the maximum number of results per page.
            Note: This is server specific but in regular Lemmy install the default value is 10 and max is 50.
        community_id:
          $ref: '#/components/schemas/CommunityID'
        saved_only:
          type: boolean
          description: Whether to fetch only saved posts.

    GetPersonDetailsResponse:
      type: object
      required:
        - person_view
        - comments
        - posts
        - moderates
      properties:
        person_view:
          $ref: '#/components/schemas/PersonView'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentView'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/PostView'
        moderates:
          type: array
          items:
            $ref: '#/components/schemas/CommunityModeratorView'

    PersonView:
      type: object
      required:
        - person
        - counts
        - is_admin
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      properties:
        person:
          $ref: '#/components/schemas/Person'
        counts:
          $ref: '#/components/schemas/PersonAggregates'
        is_admin:
          type: boolean
          description: Whether the person is an admin.

    PersonAggregates:
      type: object
      required:
        - person_id
        - post_count
        - comment_count
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/aggregates/structs.rs
      properties:
        person_id:
          $ref: '#/components/schemas/PersonID'
        post_count:
          type: integer
          format: int64
        comment_count:
          type: integer
          format: int64

    GetPersonMentionsRequest:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/CommentSortType'
        unread_only:
          type: boolean
        comment_count:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
          summary: Page number
          description: >
            Pagination. The page number to fetch the results. This allows to fetch large data sets one page at a time.
            The first page is number 1.
        limit:
          type: integer
          format: int64
          summary: Desired number of results per page
          description: >
            Pagination. Specifies the maximum number of results per page.
            Note: This is server specific but in regular Lemmy install the default value is 10 and max is 50.

    GetPersonMentionsResponse:
      type: object
      required:
        - mentions
      properties:
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/PersonMentionView'

    PersonMentionView:
      type: object
      required:
        - person_mention
        - comment
        - creator
        - post
        - community
        - recipient
        - counts
        - creator_banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - creator_blocked
      properties:
        person_mention:
          $ref: '#/components/schemas/PersonMention'
        comment:
          $ref: '#/components/schemas/Comment'
        creator:
          $ref: '#/components/schemas/Person'
        post:
          $ref: '#/components/schemas/Post'
        community:
          $ref: '#/components/schemas/Community'
        recipient:
          $ref: '#/components/schemas/Person'
        counts:
          $ref: '#/components/schemas/CommentAggregates'
        creator_banned_from_community:
          type: boolean
        creator_is_moderator:
          type: boolean
        creator_is_admin:
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
        saved:
          type: boolean
        creator_blocked:
          type: boolean
        my_vote:
          type: integer
          format: int32 # int16
          minimum: -32768
          maximum: 32767
          description: Users' vote status.

    PersonMention:
      type: object
      required:
        - id
        - recipient_id
        - comment_id
        - read
        - published
      properties:
        id:
          $ref: '#/components/schemas/PersonMentionID'
        recipient_id:
          $ref: '#/components/schemas/PersonID'
        comment_id:
          $ref: '#/components/schemas/CommentID'
        read:
          type: boolean
        published:
          type: string
          format: date-time

    GetSiteResponse:
      type: object
      required:
        - site_view
        - admins
        - version
        - all_languages
        - discussion_languages
      properties:
        site_view:
          $ref: '#/components/schemas/SiteView'
        admins:
          type: array
          items:
            $ref: '#/components/schemas/PersonView'
        version:
          type: string
        my_user:
          $ref: '#/components/schemas/MyUserInfo'
        all_languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        discussion_languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageID'
        taglines:
          type: array
          items:
            $ref: '#/components/schemas/Tagline'
        custom_emojis:
          type: array
          items:
            $ref: '#/components/schemas/CustomEmojiView'

    SiteView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs
      required:
        - site
        - local_site
        - local_site_rate_limit
        - counts
      properties:
        site:
          $ref: '#/components/schemas/Site'
        local_site:
          $ref: '#/components/schemas/LocalSite'
        local_site_rate_limit:
          $ref: '#/components/schemas/LocalSiteRateLimit'
        counts:
          $ref: '#/components/schemas/SiteAggregates'

    Site:
      type: object
      required:
        - id
        - name
        - published
        - actor_id
        - last_refreshed_at
        - inbox_url
        - public_key
        - instance_id
      properties:
        id:
          $ref: '#/components/schemas/SiteID'
        name:
          type: string
        sidebar:
          type: string
        published:
          type: string
          format: date-time
          description: The date site info was published.
        updated:
          type: string
          format: date-time
          description: The date this site info was last updated.
        icon:
          type: string
          format: uri
        banner:
          type: string
          format: uri
        description:
          type: string
        actor_id:
          type: string
          format: uri
          description: The federated actor_id.
          example: https://discuss.tchncs.de/
        last_refreshed_at:
          type: string
          format: date-time
        inbox_url:
          type: string
          format: uri
        public_key:
          type: string
        instance_id:
          $ref: '#/components/schemas/InstanceID'

    LocalSite:
      type: object
      required:
        - id
        - site_id
        - site_setup
        - enable_downvotes
        - enable_nsfw
        - community_creation_admin_only
        - require_email_verification
        - private_instance
        - default_theme
        - default_post_listing_type
        - hide_modlog_mod_names
        - application_email_admins
        - actor_name_max_length
        - federation_enabled
        - captcha_enabled
        - captcha_difficulty
        - published
        - registration_mode
        - reports_email_admins
        - federation_signed_fetch
      properties:
        id:
          $ref: '#/components/schemas/LocalSiteID'
        site_id:
          $ref: '#/components/schemas/SiteID'
        site_setup:
          type: boolean
          description: True if the site is set up.
        enable_downvotes:
          type: boolean
          description: Whether downvotes are enabled.
        enable_nsfw:
          type: boolean
          description: Whether NSFW is enabled.
        community_creation_admin_only:
          type: boolean
          description: Whether only admins can create communities.
        require_email_verification:
          type: boolean
          description: Whether emails are required.
        application_question:
          type: boolean
          description: An optional registration application questionnaire in markdown.
        private_instance:
          type: boolean
          description: Whether the instance is private or public.
        default_theme:
          type: boolean
          description: The default front-end theme.
        default_post_listing_type:
          $ref: '#/components/schemas/ListingType'
        legal_information:
          type: boolean
          description: An optional legal disclaimer page.
        hide_modlog_mod_names:
          type: boolean
        application_email_admins:
          type: boolean
        slur_filter_regex:
          type: string
          description: An optional regex to filter words.
        actor_name_max_length:
          type: integer
          format: int32
          description: The max actor name length.
        federation_enabled:
          type: boolean
          description: Whether federation is enabled.
        captcha_enabled:
          type: boolean
          description: Whether captcha is enabled.
        captcha_difficulty:
          type: string
          description: The captcha difficulty.
        published:
          type: string
          format: date-time
          description: The date this site info was published.
        updated:
          type: string
          format: date-time
          description: The date this site info was last updated.
        registration_mode:
          $ref: '#/components/schemas/RegistrationMode'
        reports_email_admins:
          type: boolean
          description: Whether to email admins on new reports.
        federation_signed_fetch:
          type: boolean
          description: Whether to sign outgoing Activitypub fetches with private key of local instance. Some Fediverse instances and platforms require this.

    LocalSiteRateLimit:
      type: object
      description: Rate limits for your site. Given in count / length of time.
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/local_site_rate_limit.rs
      required:
        - local_site_id
        - message
        - message_per_second
        - post
        - post_per_second
        - register
        - register_per_second
        - image
        - image_per_second
        - comment
        - comment_per_second
        - search
        - search_per_second
        - published
        - import_user_settings
        - import_user_settings_per_second
      properties:
        local_site_id:
          $ref: '#/components/schemas/LocalSiteID'
        message:
          type: integer
          format: int32
        message_per_second:
          type: integer
          format: int32
        post:
          type: integer
          format: int32
        post_per_second:
          type: integer
          format: int32
        register:
          type: integer
          format: int32
        register_per_second:
          type: integer
          format: int32
        image:
          type: integer
          format: int32
        image_per_second:
          type: integer
          format: int32
        comment:
          type: integer
          format: int32
        comment_per_second:
          type: integer
          format: int32
        search:
          type: integer
          format: int32
        search_per_second:
          type: integer
          format: int32
        published:
          type: string
          format: date-time
          description: The date this site info was published.
        updated:
          type: string
          format: date-time
          description: The date this site info was last updated.
        import_user_settings:
          type: integer
          format: int32
        import_user_settings_per_second:
          type: integer
          format: int32

    SiteAggregates:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/aggregates/structs.rs
      required:
        - site_id
        - users
        - posts
        - comments
        - communities
        - users_active_day
        - users_active_week
        - users_active_month
        - users_active_half_year
      properties:
        site_id:
          $ref: '#/components/schemas/SiteID'
        users:
          type: integer
          format: int64
        posts:
          type: integer
          format: int64
        comments:
          type: integer
          format: int64
        communities:
          type: integer
          format: int64
        users_active_day:
          type: integer
          format: int64
          description: The number of users with any activity in the last day.
        users_active_week:
          type: integer
          format: int64
          description: The number of users with any activity in the last week.
        users_active_month:
          type: integer
          format: int64
          description: The number of users with any activity in the last month.
        users_active_half_year:
          type: integer
          format: int64
          description: The number of users with any activity in the last half year.

    MyUserInfo:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/api_common/src/site.rs
      required:
        - local_user_view
        - follows
        - moderates
        - community_blocks
        - person_blocks
        - discussion_languages
      properties:
        local_user_view:
          $ref: '#/components/schemas/LocalUserView'
        follows:
          type: array
          items:
            $ref: '#/components/schemas/CommunityFollowerView'
        moderates:
          type: array
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
        community_blocks:
          type: array
          items:
            $ref: '#/components/schemas/CommunityBlockView'
        person_blocks:
          type: array
          items:
            $ref: '#/components/schemas/PersonBlockView'
        discussion_languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageID'

    LocalUserView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs
      required:
        - local_user
        - person
        - counts
      properties:
        local_user:
          $ref: '#/components/schemas/LocalUser'
      person:
        local_user:
          $ref: '#/components/schemas/Person'
      counts:
        local_user:
          $ref: '#/components/schemas/PersonAggregates'

    LocalUser:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/local_user.rs
      required:
        - id
        - person_id
        - show_nsfw
        - theme
        - default_sort_type
        - default_listing_type
        - interface_language
        - show_avatars
        - send_notifications_to_email
        - show_scores
        - show_bot_accounts
        - show_read_posts
        - email_verified
        - accepted_application
        - open_links_in_new_tab
        - blur_nsfw
        - auto_expand
        - infinite_scroll_enabled
        - admin
        - post_listing_mode
        - totp_2fa_enabled
        - enable_keyboard_navigation
        - enable_animated_images
        - collapse_bot_comments
      properties:
        id:
          $ref: '#/components/schemas/LocalUserID'
        person_id:
          description: The person_id for the local user.
          $ref: '#/components/schemas/PersonID'
        email:
          type: string
          format: email
          description: User's email address.
        show_nsfw:
          type: boolean
          description: Whether to show NSFW content.
        theme:
          type: string
          description: User's theme. e.g. "browser".
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          description: The default sort type for the user.
        default_listing_type:
          $ref: '#/components/schemas/ListingType'
          description: The default listing type.
        interface_language:
          type: string
          description: The language of the Lemmy interface.
        show_avatars:
          type: boolean
          description: Whether to show avatars.
        send_notifications_to_email:
          type: boolean
          description: Whether to send notifications to users email address.
        show_scores:
          type: boolean
          description: Whether to show comment / post scores.
        show_bot_accounts:
          type: boolean
          description: Whether to show bot accounts.
        show_read_posts:
          type: boolean
          description: Whether to show read posts.
        email_verified:
          type: boolean
          description: Whether their email has been verified.
        accepted_application:
          type: boolean
          description: Whether their registration application has been accepted.
        open_links_in_new_tab:
          type: boolean
          description: Open links in a new tab.
        blur_nsfw:
          type: boolean
        auto_expand:
          type: boolean
        infinite_scroll_enabled:
          type: boolean
          description: Whether infinite scroll is enabled.
        admin:
          type: boolean
          description: Whether the person is an admin.
        post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
        totp_2fa_enabled:
          type: boolean
        enable_keyboard_navigation:
          type: boolean
          description: Whether to allow keyboard navigation (for browsing and interacting with posts and comments).
        enable_animated_images:
          type: boolean
          description: Whether user avatars and inline images in the UI that are gifs should be allowed to play or should be paused
        collapse_bot_comments:
          type: boolean
          description: Whether to auto-collapse bot comments.

    Tagline:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/tagline.rs
      description: A tagline, shown at the top of your site.
      required:
        - id
        - local_site_id
        - content
        - published
      properties:
        id:
          type: integer
          format: int32
        local_site_id:
          $ref: '#/components/schemas/LocalSiteID'
        content:
          type: string
        published:
          type: string
          format: date-time
          description: The date this tagline was published.
        updated:
          type: string
          format: date-time
          description: The date this tagline was last updated.

    CustomEmojiView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views/src/structs.rs
      description: A custom emoji view.
      required:
        - custom_emoji
        - keywords
      properties:
        custom_emoji:
          $ref: '#/components/schemas/CustomEmoji'
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/CustomEmojiKeyword'

    CustomEmoji:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/custom_emoji.rs
      description: A custom emoji.
      required:
        - id
        - local_site_id
        - shortcode
        - image_url
        - alt_text
        - category
        - published
      properties:
        id:
          $ref: '#/components/schemas/CustomEmojiID'
        local_site_id:
          $ref: '#/components/schemas/LocalSiteID'
        shortcode:
          type: string
        image_url:
          type: string
          format: uri
        alt_text:
          type: string
        category:
          type: string
        published:
          type: string
          format: date-time
          description: The date this emoji was published.
        updated:
          type: string
          format: date-time
          description: The date this emoji was last updated.

    CustomEmojiKeyword:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_schema/src/source/custom_emoji_keyword.rs
      description: A custom keyword for an emoji.
      required:
        - custom_emoji_id
        - keyword
      properties:
        custom_emoji_id:
          $ref: '#/components/schemas/CustomEmojiID'
        keyword:
          type: string

    CommunityFollowerView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      description: A community follower.
      required:
        - community
        - follower
      properties:
        community:
          $ref: '#/components/schemas/Community'
        follower:
          $ref: '#/components/schemas/Person'

    CommunityBlockView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      description: A community block.
      required:
        - person
        - community
      properties:
        person:
          $ref: '#/components/schemas/Person'
        community:
          $ref: '#/components/schemas/Community'

    PersonBlockView:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/db_views_actor/src/structs.rs
      description: A person block.
      required:
        - person
        - target
      properties:
        person:
          $ref: '#/components/schemas/Person'
        target:
          $ref: '#/components/schemas/Person'

    ResolveObjectResponse:
      type: object
      externalLink: https://github.com/LemmyNet/lemmy/blob/main/crates/api_common/src/site.rs
      description: The response of an apub object fetch.
      properties:
        comment:
          $ref: '#/components/schemas/CommentView'
        post:
          $ref: '#/components/schemas/PostView'
        community:
          $ref: '#/components/schemas/CommunityView'
        person:
          $ref: '#/components/schemas/PersonView'
